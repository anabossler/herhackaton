# -*- coding: utf-8 -*-
"""hackaton recommendations ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15t-7arTCzRPv-WsC5_Ldg7U1G2a1NjQx
"""

import pandas as pd
import numpy as np

#Cargamos las bases de datos
datas=pd.read_csv('/content/eda alicante - PaÃÅgina1.csv', decimal=',')

datas.info()

datas.describe()

datas.corr()

import seaborn as sns

corr=datas.corr()

sns.heatmap(corr, 
        xticklabels=corr.columns,
        yticklabels=corr.columns)

datas = datas.drop('Transport line', 1)

datas.head()

colunas = ['Total Spanish',	'Total Foreign born',	'rentacapita','Distance nearest hospital km','porcentage']

El orden de prioridad es :

total spanish con valor de 1
total foreign born con valor de 5
rentcapita con valor de 3
distance nearest hospital  con valor de 7
porcentage con valor de 9

SUMA=25

clas_datas = pd.DataFrame()

clas_datas['Neighbourhood']=datas['Neighbourhood']

listA = [78, 14, 1, 11]
# printing original list
print("Given list is : \n",listA)
# using sorted() and index()
res = [sorted(listA).index(i) for i in listA]
# printing result
print("list with relative ordering of elements : \n",res)

def OrdenadorCol (colunas):

    col = datas[colunas]
    print("Given list is : \n",col)
    # using sorted() and index()
    res = [sorted(col,reverse=True).index(i) for i in col]
    # printing result
    print("list with relative ordering of elements : \n",res)
    return (res)

# printing result
print("list with relative ordering of elements : \n",res)

value = 'valor'
if value in datas.index:
  print(datas.loc[value])
else:
  print("Not in index")

novo1 = OrdenadorCol('porcentage')
novo1

"""Total Spanish',	'Total Foreign born',	'rentacapita','Distance nearest hospital km','porcentage"""

novo2 = OrdenadorCol('Total Spanish')

novo3 = OrdenadorCol('Total Foreign born')

novo4 = OrdenadorCol('rentacapita')

novo5 = OrdenadorCol('Distance nearest hospital km')

def Agregador (lista):
  n= len(lista)
  for i in range(n):
    tempo=lista[i]
    lista[i]=tempo + 1 
  return (lista)

L = [5,0,3]
Agregador(L)

"""Total Spanish',	'Total Foreign born',	'rentacapita','Distance nearest hospital km','porcentage"""

porcentage = Agregador(novo1)
totalspanish = Agregador(novo2)
totalforeign = Agregador(novo3)
rentacapita = Agregador(novo4)
distancenearesthospital = Agregador(novo5)

df = pd.DataFrame(list(zip(porcentage,totalspanish,totalforeign,rentacapita,distancenearesthospital)), columns=["porcentage", "Total Spanish", "Total Foreign born",	"rentacapita", "Distance nearest hospital km"])
df.head()

df.info()

clas_datas.info()

fin = pd.merge(clas_datas, df, right_index=True, left_index=True)
fin

"""El orden de prioridad es :

total spanish con valor de 1
total foreign born con valor de 5
rentcapita con valor de 3
distance nearest hospital  con valor de 7
porcentage con valor de 9

SUMA=25
"""

fin['porcentage'] = fin['porcentage'].apply(lambda x:  x * (9/25))
fin['Total Spanish'] = fin['Total Spanish'].apply(lambda x:  x * (1/25))
fin['Total Foreign born'] = fin['Total Foreign born'].apply(lambda x:  x * (5/25))
fin['rentacapita'] = fin['rentacapita'].apply(lambda x:  x * (3/25))
fin['Distance nearest hospital km'] = fin['Distance nearest hospital km'].apply(lambda x:  x * (7/27))
fin

fin['mean'] = fin.mean(axis=1)
fin

coli = fin['mean']
print("Given list is : \n",coli)
# using sorted() and index()
res = [sorted(coli,reverse=False).index(i) for i in coli]
# printing result
print("list with relative ordering of elements : \n",res)

Lugares = Agregador(res)

barrio_lista = fin['Neighbourhood'].tolist()
barrio_lista

n = len(barrio_lista)
for  i in range (n):
  print('The neighbourhood    ' + str (barrio_lista[i] + ' is recommended to explore clinical trial in  ' + str(Lugares[i])))